plugins {
    id 'java-library'
    id 'maven-publish'

    // Versioning Plugins
    id 'nebula.release' version '9.2.0'

    id 'com.jfrog.bintray' version '1.8.4'
}

group = 'io.eliez'
description = 'Joda TypeHandlerCallback support for MyBatis'

sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    jcenter()
}

dependencies {
    api('org.mybatis:mybatis:3.4.6')
    api('joda-time:joda-time:2.10')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name 'MIT License'
            url 'https://opensource.org/licenses/MIT'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'eliezio'
            name 'Eliezio Oliveira'
            email 'ebo@pobox.com'
        }
    }

    scm {
        url "https://github.com/eliezio/${project.name}.git"
    }
}

publishing {
    publications {
        "${project.name}"(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            artifact tasks.javadocJar
            groupId group
            artifactId name
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.name)
                root.appendNode('url', "https://github.com/eliezio/${project.name}.git")
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = [project.name]
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = user
        desc = project.description
        licenses = ['MIT']
        vcsUrl = "https://github.com/eliezio/${project.name}.git"
        publicDownloadNumbers = true
        githubRepo = "eliezio/${project.name}"
        githubReleaseNotesFile = 'README.markdown'
        version {
            name = project.version
            vcsTag = "v$project.version"
        }
    }
}
